#!/usr/bin/perl

use JSON;
use JSON::XS;
use Data::Dumper;
use Encode;
use utf8::all;
use DBI;
use CGI;
use CGI::Carp 'fatalsToBrowser';
use URI::Escape;
use Search::Elasticsearch;
use Text::Unidecode;

use Time::HiRes;

# For production:
#$indexerPath = "/pwxdata/poe/shops/bin";

# For development:
$indexerPath = "/pwxdata/git/exiletools-indexer";

chdir("$indexerPath");
require("subs/all.subroutines.pl");
require("subs/sub.formatJSON.pl");
require("subs/sub.parseClipboardText.pl");

if (@ARGV) {

  print "[DEBUG] Enter Item Text (Empty Line to Exit):\n";
  while (<STDIN>) {
    last if (/^\n$/);
    $itemData .= $_;
  }
  $debug = 1;
  $version = 9999;
} else {
  use CGI;
  $query=new CGI;

  $league = $query->param("league");
  $showDays = $query->param("showDays");
  $debug = $query->param("pwxdebug");
  $itemData = $query->param("itemData");
  $version = $query->param("v");
  $interactiveSearch = $query->param("interactiveSearch");

  $itemData =~ s/\r\n/\n/g;
  $itemData =~ s/^\s+//g;


}

#$debug = 1;

$t0 = [Time::HiRes::gettimeofday];

print "Content-type: text/text\n\n";

if ($version < 5.1) {
  print "An updated version of this macro is available\n";
  print "with better uri encoding support which allows\n";
  print "processing of rare and other items:\n\n";
  print "http://exiletools.com\n";
  exit;
}

if ($interactiveSearch) {
  print "Sorry! Interactive searches have not been\n";
  print "fully implemented in this version. This will\n";
  print "happen in the near future and the prompts and\n";
  print "dialogues will update automatically with all\n";
  print "supported search types.\n\n";
  print "You performed an interactive search for:\n\n";
  print "$interactiveSearch\n";
  exit;
}

# Maintenance Notification



$league =~ tr/\/ \-a-zA-Z0-9//dc;
$shortOutput = 1 if ($shortOutput);

$league = lc($league);

#$dbhladder = DBI->connect("dbi:mysql:ladder","pwx","This is pwx web.") || die "DBI Connection Error: $DBI::errstr\n";
#my $apileaguename = $dbhladder->selectrow_array("select `itemjsonName` from `league-list` where `league`=\"$league\");
#if ($apileaguename) {
#  $league = $apileaguename;
#}
#$dbhladder->disconnect;


$showDays = 7 unless ($showDays);


&parseClipboardText("$itemData");

$endelapsed = Time::HiRes::tv_interval ( $t0, [Time::HiRes::gettimeofday]);
&d("Processing Time: $endelapsed seconds\n\n");


exit;
