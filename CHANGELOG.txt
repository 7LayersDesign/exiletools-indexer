# Version 3.1

* Corrected the `defaultMessage` to use `lastCharacterName` instead of `sellerAccount`
  * https://github.com/trackpete/exiletools-indexer/issues/108

* Added currency specific fields to allow for boolean SHOULD comparisons across all currency types and values
  * This will allow tools to set custom rates for searching but not for sorting server side results
  * Should only be used if the fixed `chaosEquiv` rate becomes wildly inaccurate
  * Should NOT be default behaviour
  * Please don't blow this up
  * https://github.com/trackpete/exiletools-indexer/issues/109 

* `shop.chaosEquiv` and `shop.currency` and `shop.amount` should not be set for items that do not have prices.
  * This also applies to `shop.price.[currency]` fields
  * https://github.com/trackpete/exiletools-indexer/issues/112

* `shop.note` will not be set for an item without a note

* You can now set poe-watch-stash-tab-river to pull the most recent next_change_id from the stats index and start from there.



# OLDER CHANGES

# VERSION 3.0.0 released 2016/03/01

# General Changes:

Everything is different in the pipeline. There's no more database in the interim, there's no more need to set up various jobs for the pipeline, etc.  There is now a single job that runs continuously to consume the river made available by the official Stash Tab API and insert this data directly into Elastic Search.

Please review the updated README to understand how this works. All of the abandoned older code is temporarily moved to `.old-files-from-v2` in case they need to be referenced.

# Pipeline

* There is an option to consumed API data for reconstruction
  * If enabled, each change_id is saved to its own file, allowing the index to be rebuilt on demand.
  * I haven't yet written a tool to do this

* There is an option to log every file indexed as a single line of JSON into a JSON log
  * Intended to ultimately be used for web sockets and filtering before items even hit the index

# Tools

* A new tool called `watch-modified-items.pl` has been added. This will run forever and confirm items are going into the index. Handy for debugging, but should be ctrl-c'd when you're done debugging.

* `pull-item-data-from-poedb.pl` has been moved in from my personal tool chest. It's just a simple script to create the gear base type hash. If a bunch of new stuff gets added in Ascendancy you may need to run it yourself or just wait for me to push an update.  

* `extract-json-from-thread.pl` has been changed a bit to work with the new subroutines 

* `setup` scripts are now in `tools\setup`

# WWW directory

Bunch of changes here:

* `www/html/docs` now contains the documentation data that you can see at http://api.exiletools.com/info
* `helloworld.html` and `js/es-helloworld.js` contains a very simple AngularJS example to get up and running against the public ES API
* `shop-watcher.html` and `js/es-watcher.js` contain code to allow users to monitor a seller account in the index for changes in near-realtime
* Some other random junk in there for skilltree stuff that are works in progress

# Mapping / Document Information Changes in v3:

There should be no major breaking changes in v3, however there *are* some minor breaking changes because of the new Stash Tab API - some shop forum related fields are obviously gone now.

There are also a bunch of new fields available as well as some various other changes shown below:

* New shop fields have been added for the Public Stash Tab API. These include:
  * `shop.note` : Contains the original note field, unedited
  * `shop.priceSource` : Indicates whether the price (if any) was determined from the note or stash tab title
  * `shop.defaultMessage` : A simple default message that can be copy/pasted to a seller (you can of course build your own and ignore this)
  * `shop.stash` : A new object with API level stash metadata
  * `shop.stash.stashID` : A UUID identifying the stash used by the API
  * `shop.stash.inventoryID` : The internal GGG inventory ID of the stash, I don't think this is used anywhere
  * `shop.stash.stashName` : The original name of the stash (note: UTF8 is supported! This field can get fuuunky)
  * `shop.stash.xLocation` : The X coordinate of the item in the stash
  * `shop.stash.yLocation` : The Y coordinate of the item in the stash
  * `shop.lastCharacterName` : The name of the character logged in when the stash tab was updated

* Some fields have been removed as they are no longer relevant. These include:
  * `md5sum`
  * `shop.threadid`
  * `shop.threadTitle`
  * `shop.sellerIGN`
  * `shop.lastUpdateDB`

* Added new modsPseudo calculations to create the following new pseudo mods:
  * `#% Total increased Evasion Rating`
  * `#% Total increased Armour`
  * `#% Total increased Energy Shield`
  *  https://github.com/trackpete/exiletools-indexer/issues/25

* Added `attributes.baseItemName` which will contain the determined underlying base item type (i.e. "Rustic Sash", "Spiny Maul", etc.)
  * Updated all gear base types to include all currently known items
  * https://github.com/trackpete/exiletools-indexer/issues/96

* Added new Estimated 20% Quality calculations for Armour, Evasion, Energy Shield, and Physical DPS. The nature of the rounding in these calculations means it may be off by 1-2pts in some situations from the actual in-game result. These new fields are part of a new `propertiesPseudo` object as follows:
  * pseudoProperties.Armour.estimatedQ20.Evasion Rating
  * pseudoProperties.Armour.estimatedQ20.Armour
  * pseudoProperties.Armour.estimatedQ20.Energy Shield
  * pseudoProperties.Weapon.estimatedQ20.Physical DPS
  * https://github.com/trackpete/exiletools-indexer/issues/25

* A new sockets information field called `sockets.allSocketsGGG` will be generated that includes the socket list in GGG's text style layout (i.e. `G-G B-B` means two linked green sockets followed by two linked blue sockets)
  * https://github.com/trackpete/exiletools-indexer/issues/99

* Any field which has `min` and `max` attributes should now also have an `avg` attribute (which is simply `(min + max) / 2` for search purposes
  * https://github.com/trackpete/exiletools-indexer/issues/102

* Ascendancy Enchantments have their own object section in the JSON data. As these are always fixed values, they will all be entered in to the mapping as boolean true objects under `enchantMods` - note that any apostrophes in the mod name will be removed. Additionally, the `attributes.enchantModsCount` value shows how many lines of `enchantMods` there are (presumably this will never be over 1, but..)
  * https://github.com/trackpete/exiletools-indexer/issues/100

* Item level is now available in the JSON data from GGG!
  * `attributes.ilvl`
  * https://github.com/trackpete/exiletools-indexer/issues/101

* Gem "Cast Time" and "Cooldown Time" (and any other Gem property ending in " sec" will now have " sec" removed and be stored as a number

* Items with Stack Sizes will now set `properties.stackSize.current` and `properties.stackSize.max` 

* There is now an `attributes.weaponType` property which indicates a weapon's type in a searchable field (i.e. `attributes.weaponType : Dagger`) so you do not have to search for `properties.Weapon.type.Dagger : true`
  * https://github.com/trackpete/exiletools-indexer/issues/105

* There is now a boolean `shop.hasPrice` field which will be set to `true` if the item has a price and `false` if it does not
  * https://github.com/trackpete/exiletools-indexer/issues/104

* Socket counts for different colors are now added under sockets, these include:
  * `sockets.totalWhite`
  * `sockets.totalRed`
  * `sockets.totalBlue`
  * `sockets.totalGreen`
  * https://github.com/trackpete/exiletools-indexer/issues/106
